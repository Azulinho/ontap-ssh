
Puppet::Type.type(:vserver).provide(:ontapi) do
	desc 'ontapi connects to the controller'
	#confine :true => begin
	#	if File.exists?(['/opt/netapp-manageability-sdk-5.0R1/src/sample/Data_ONTAP/Ruby/apitest.rb'])
	#end

	commands :ontapi_exe => "/opt/netapp-manageability-sdk-5.0R1/src/sample/Data_ONTAP/Ruby/apitest.rb"

	def exists?
		begin
			ontapi_result = ontapi_exe(  resource[:cmgmt], resource[:vuser], resource[:vpass], 'vserver-get-iter')
			if ontapi_result.include? resource[:name]
				true
			else
				false
			end
		end
	end

	def create
		begin
			ontapi_result = ontapi_exe(  resource[:cmgmt], resource[:vuser], resource[:vpass], 'vserver-create',
						   'vserver-name', resource[:name], 
						   'root-volume', resource[:root_volume], 
						   'root-volume-aggregate', resource[:root_volume_aggregate],
						   'root-volume-security-style',resource[:root_volume_security_style], 
						   'language', resource[:language],
						   'snapshot-policy', resource[:snapshot_policy], 
						   'comment', resource[:comment],
						   'antivirus-on-access-policy', resource[:antivirus_on_access_policy], 
						   'quota-policy',resource[:quota_policy],
						   'name-server-switch',resource[:name_server_switch])
		end
		puts ontapi_result
	end


end
